<%- include('../layout/header.ejs') -%>
<!-- Include SweetAlert2 CSS and JS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>

    </head>
<body>
    <div class="page-wrapper">
          <%- include('../partials/navbar.ejs') -%>

          <main class="main">
        	<div class="page-header text-center" style="background-image: url('/assets/images/page-header-bg.jpg')">
        		<div class="container">
        			<h1 class="page-title">Order Summary<span>FashionZone</span></h1>
        		</div><!-- End .container -->
        	</div><!-- End .page-header -->
            <nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
                <div class="container">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Order Summary</li>
                    </ol>
                </div><!-- End .container -->
            </nav><!-- End .breadcrumb-nav -->


            <div class="container order-summary-container p-5">
                <h1 class="text-center mb-4">Order Summary</h1>
                <div class="order-summary">
                    <div class="order-details d-flex justify-content-between">
                        <!-- Dynamic order details -->
                        <div class="order-info">
                            <h2 class="mb-3">Order Details</h2>
                            <p><strong>Order ID:</strong> <%= order.orderId %></p>
                            <p><strong>Total Amount:</strong> ₹ <%= order.totalAmount %></p>
                            <p><strong>Ordered Date:</strong> <%= new Date(order.createdAt).toLocaleDateString("en-US", { 
                                year: "numeric", 
                                month: "long", 
                                day: "numeric", 
                                hour: "2-digit", 
                                minute: "2-digit" 
                            }) %></p>
                            <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
                         
                            <p>
                                <strong>Payment Status:</strong> 
                                <span 
                                  class="fw-bold 
                                    <%= order.paymentStatus === 'Paid' 
                                      ? 'text-success' 
                                      : order.paymentStatus === 'Failed' 
                                      ? 'text-danger' 
                                      : 'text-warning' %>">
                                  <%= order.paymentStatus %>
                                </span>
                              </p>
                              
                              <p>
                                <strong>Order Status:</strong> 
                                <span 
                                  class="fw-bold 
                                    <%= order.status === 'Delivered' 
                                      ? 'text-success' 
                                      : order.status === 'Pending' 
                                      ? 'text-warning' 
                                      : 'text-danger' %>">
                                  <%= order.status %>
                                </span>
                              </p>
                              
                       
                            <div class="text-center mt-4" style="margin-left: -170px;">
                                <form id="payment-form">
                                    <input type="hidden" name="totalAmount" value="<%= order.totalAmount %>">
                                    <input type="hidden" name="orderId" value="<%= order.orderId %>">
                                    <button type="button" id="payNow" class="btn btn-primary">Pay Now</button>
                                </form>
                            </div>


                            <script>
                                document.addEventListener("DOMContentLoaded", function () {
                                    const paymentStatus = "<%= order.paymentStatus %>";
                                    const payNowButton = document.getElementById("payNow");
                            
                                    if (paymentStatus === "Paid") {
                                        payNowButton.style.display = "none";
                                    }
                                });
                            </script>

                        </div>
                        <div class="address-details">
                            <!-- Dynamic shipping address -->
                            <p><strong>Ship to:</strong> <%= shippedAddress.name %></p>
                            <p><strong>Delivery Address:</strong><br>
                                <%= shippedAddress.street %>, <%= shippedAddress.city %>, <%= shippedAddress.state %>, <%= shippedAddress.country %>
                                <br>Pin code : <%= shippedAddress.pincode %><br>
                                Phone: <%= shippedAddress.phone %>
                            </p>
                        </div>
                    </div>
            
                    <h3 class="mt-4 mb-3">Products</h3>
                    <table class="table table-striped table-bordered text-center">
                        <thead class="thead-dark">
                            <tr>
                                <th>Image</th>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Dynamic product details -->
                            <% if (order.products && order.products.length > 0) { %>
                                <% order.products.forEach(product => { %>
                                    <% if (product.items && product.items.length > 0) { %>
                                        <% product.items.forEach(item => { %>
                                            <tr style="<%= item.display ? '' : 'opacity: 0.5;' %>">
                                                <td>
                                                    <img src="/<%= item.image %>" alt="<%= item.title %>" class="variant-image" style="width: 150px; margin: auto;">
                                                </td>
                                                <td><%= item.title %></td>
                                                <td><%= item.quantity %></td>
                                                <td>₹ <%= item.price %></td>
                                                <td>₹ <%= (item.quantity * item.price) %></td>
                                            </tr>
                                        <% }); %>
                                    <% } else { %>
                                        <tr><td colspan="5">No items found for this product.</td></tr>
                                    <% } %>
                                <% }); %>
                            <% } else { %>
                                <tr><td colspan="5">No products found in this order.</td></tr>
                            <% } %>
                        </tbody>
                    </table>
            
                    <div class="order-summary-footer">
                        <div class="row">
                            <div class="col-md-12 text-right">
                                <!-- Grand total calculation -->
                                <h6>Final Price after all discount: <span>₹ <%= order.totalAmount %></span></h6>
                                
                                <h3 class="mt-4">Grand Total: <span>₹ <%= order.totalAmount %></span></h3>
                            </div>
                        </div>
                    </div>
            
                    <div class="text-center mt-4">
                        <a href="/shop" class="btn btn-primary btn-lg mr-2">Continue Shopping</a>
                        <a href="/profile" class="btn btn-secondary btn-lg">View Orders</a>
                        <div class="text-center mt-4">
                            <button id="downloadInvoice" class="btn btn-success btn-lg">Download Invoice</button>
                        </div>
                        
                    </div>
                </div>
            </div>
            
            <!-- Include the Razorpay script -->
            <!-- Include the Razorpay script -->


 




              










            
            </div>
        </main>
        
<%- include('../partials/footer.ejs')-%>
        </div>



<!-- Razorpay payment oparation  -->





<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.12/dist/sweetalert2.min.css" rel="stylesheet">

<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.12/dist/sweetalert2.min.js"></script>

<!-- Razorpay Checkout Script -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>






<script>
document.getElementById("payNow").addEventListener("click", function() {
const totalAmount = document.querySelector('input[name="totalAmount"]').value;
const orderId = document.querySelector('input[name="orderId"]').value;

// Show SweetAlert confirmation
Swal.fire({
title: 'Are you sure?',
text: "You are about to make a payment!",
icon: 'warning',
showCancelButton: true,
confirmButtonText: 'Yes, Pay Now!',
cancelButtonText: 'No, Cancel'
}).then((result) => {
if (result.isConfirmed) {
// Create the Razorpay order on the server
fetch('/ordersummany/continerazorpaypayment', {
method: 'POST',
headers: {
'Content-Type': 'application/json',
},
body: JSON.stringify({
totalAmount: totalAmount,
orderId: orderId,
}),
})
.then(response => response.json())
.then(data => {
if (data.success) {
// Initialize Razorpay Payment
var options = {
key: "rzp_test_eEMIhlHUZ45CcM",  // Your Razorpay key
amount: data.amount,  // Amount in paise
currency: data.currency,
name: "FashionZone",
description: "Payment for Order",
image: "https://example.com/logo.png",  // Your company logo
order_id: data.orderId,  // Order ID received from your backend
handler: function(response) {
// Handle the Razorpay payment response
const { razorpay_order_id, razorpay_payment_id, razorpay_signature } = response;

// Send payment details to the backend for verification
fetch('/verifyorderpayment', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({
        razorpay_order_id: razorpay_order_id,
        razorpay_payment_id: razorpay_payment_id,
        razorpay_signature: razorpay_signature,
        orderId
    }),
})
.then(response => response.json())
.then(data => {
    if (data.success) {
        Swal.fire({
            title: 'Success!',
            text: 'Your payment was successful!',
            icon: 'success',
            confirmButtonText: 'OK'
        });
    } else {
        Swal.fire({
            title: 'Error!',
            text: 'Payment verification failed. Please try again.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
})
.catch(error => {
    console.error('Error:', error);
    Swal.fire({
        title: 'Error!',
        text: 'An error occurred while verifying the payment.',
        icon: 'error',
        confirmButtonText: 'OK'
    });
});
},
prefill: {
name: "Customer Name",
email: "customer@example.com",
contact: "1234567890"
},
notes: {
address: "Customer address"
},
theme: {
color: "#F37254"
}
};

var rzp1 = new Razorpay(options);
rzp1.open();  // Open Razorpay checkout
} else {
Swal.fire({
title: 'Error!',
text: 'Failed to create Razorpay order. Please try again.',
icon: 'error',
confirmButtonText: 'OK'
});
}
})
.catch(error => {
console.error('Error:', error);
Swal.fire({
title: 'Error!',
text: 'An error occurred while creating the payment order.',
icon: 'error',
confirmButtonText: 'OK'
});
});
}
});
});
</script>













        <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
        
        <script>
  document.getElementById('downloadInvoice').addEventListener('click', function () {
    const orderSummary = document.querySelector('.order-summary-container');
    const downloadButton = document.querySelector('#downloadInvoice');
    const buttonsDiv = document.querySelector('.text-center.mt-4'); // Target the div containing all buttons

    // Hide the download button and the buttons container
    downloadButton.style.display = 'none';
    buttonsDiv.style.display = 'none';

    // Use html2canvas to capture the content as an image
    html2canvas(orderSummary, {
        scale: 2, // Increase scale for better quality
        useCORS: true, // Enable cross-origin
    }).then(canvas => {
        const imgData = canvas.toDataURL('image/png');
        const { jsPDF } = window.jspdf; // Access jsPDF from the module
        const pdf = new jsPDF('p', 'mm', 'a4'); // Portrait, millimeters, A4 size

        // Add the e-commerce name to the top of the PDF
        pdf.setFontSize(20); // Set font size
        pdf.setFont('helvetica', 'bold'); // Set font to bold
        pdf.setTextColor(255, 215, 0); // Set text color to yellow (RGB for gold)
        pdf.text('FashionZone', pdf.internal.pageSize.getWidth() / 2, 15, { align: 'center' }); // Center the text at the top

        // Calculate dimensions for the PDF content
        const pdfWidth = pdf.internal.pageSize.getWidth();
        const pdfHeight = (canvas.height * pdfWidth) / canvas.width;

        // Add the image below the name
        pdf.addImage(imgData, 'PNG', 0, 20, pdfWidth, pdfHeight);

        // Save the PDF
        pdf.save('OrderSummary.pdf');

        // Show the download button and buttons container again after the PDF is generated
        downloadButton.style.display = 'inline-block';
        buttonsDiv.style.display = 'block';
    }).catch(error => {
        console.error('Error generating PDF:', error);
        // Make sure to show the buttons again in case of an error
        downloadButton.style.display = 'inline-block';
        buttonsDiv.style.display = 'block';
    });
});


        </script>
        


</body>
</html>