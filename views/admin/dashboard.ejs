<%- include('../layout/adminheader.ejs') -%>

    </head>
   


<body >

  
  <!-- ?PROD Only: Google Tag Manager (noscript) (Default ThemeSelection: GTM-5DDHKGP, PixInvent: GTM-5J3LMKC) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-5DDHKGP" height="0" width="0" style="display: none; visibility: hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->
  
  <!-- Layout wrapper -->
<div class="layout-wrapper layout-content-navbar  ">
  <div class="layout-container">

    
    




<!-- Menu -->
<%- include('../partials/adminsidebar.ejs') -%>

<!-- / Menu -->

    

    <!-- Layout container -->
    <div class="layout-page">
      
      



<!-- Navbar -->

<%- include('../partials/adminnavbar.ejs') -%>

<!-- / Navbar -->

      

      <!-- Content wrapper -->
      <div class="content-wrapper">

        <!-- Content -->
        

 <!-- Dashboard Heading Card -->
 <div class="card mb-3">
  <div class="card-widget-separator-wrapper">

    <div class="row gy-4 gy-sm-1">
      <div class="col-sm-6 col-lg-12">
        <div class="card-body text-center">
          <h2 class="fw-bold mb-0">Dashboard</h2>
        </div>

      </div>
    </div>
  </div>
</div>




<!--/ Card Border Shadow -->
<div class="row">
  <!-- Doughnut Chart Card -->
  <div class="col-md-6 col-12 d-flex flex-column">
    <div class="card flex-grow-1">
      <div class="card-header d-flex align-items-center justify-content-between">
        <div>
          <h5 class="card-title mb-0">Sales Chart</h5>
        </div>
      </div>
      <div class="card-body">
        <canvas id="salesReportDoughnut"></canvas>
      </div>
    </div>
  </div>

  <!-- Bar Chart Card -->
  <div class="col-md-6 col-12 d-flex flex-column">
    <div class="card flex-grow-1">
      <div class="card-header d-flex align-items-center justify-content-between">
        <div>
          <h5 class="card-title mb-0" id="salesStatusHeading">Sales Overview</h5> <!-- Heading updated dynamically -->
          <p class="text-body mb-0">Weekly, Monthly, Yearly, and Custom Sales</p>
        </div>
      </div>
      <div class="card-body">
        <canvas id="salesReportBar"></canvas>
      </div>
      <div class="card-footer">
        <button id="weeklyBtn" class="btn btn-primary">Weekly</button>
        <button id="monthlyBtn" class="btn btn-secondary">Monthly</button>
        <button id="yearlyBtn" class="btn btn-success">Yearly</button>
    
       
      </div>
    </div>
  </div>
</div>





<div class="row mt-4">
  <!-- Top 10 Products Card -->
  <div class="col-md-6 col-12">
    <div class="card" style="height: 400px;">
      <div class="card-header">
        <h5 class="card-title mb-0">Top 10 Products</h5>
      </div>
      <div class="card-body p-0" style="overflow-y: auto; max-height: 330px;">
        <div class="table-responsive">
          <table class="table table-striped table-hover mb-0">
            <thead class="thead-light">
              <tr>
                <th>No</th>
                <th>Product Name</th>
                <th>Quantity Sold</th>
              </tr>
            </thead>
            <tbody>
              <% mostSoldDetails.forEach((product, index) => { %>
                <tr>
                  <td><%= index + 1 %></td>
                  <td><%= product.title %></td>
                  <td><%= product.totalQuantity %></td>
                </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>


  

  <!-- Top 10 Categories Card -->
  <div class="col-md-6 col-12">
    <div class="card" style="height: 400px;">
      <div class="card-header">
        <h5 class="card-title mb-0">Top 10 Categories</h5>
      </div>
      <div class="card-body p-0" style="overflow-y: auto; max-height: 330px;">
        <div class="table-responsive">
          <table class="table table-striped table-hover mb-0">
            <thead class="thead-light">
              <tr>
                <th>No</th>
                <th>Category Name</th>
                <th>Quantity Sold</th>
              </tr>
            </thead>
            <tbody>
              <% let counter = 1; %> <!-- Initialize a counter for numbering -->
              <% for (const [category, quantity] of Object.entries(categoriesDetails)) { %>
                <tr>
                  <td><%= counter++ %></td> <!-- Increment and display the counter -->
                  <td><%= category %></td>
                  <td><%= quantity %></td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>


  


</div>





<script src="/assets/js/app-logistics-dashboard.js"></script>
   

<script src="/assets/vendor/libs/apex-charts/apexcharts.js"></script>
<script src="/assets/js/charts-apex.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>



<script>
  // Define colors
  const colors = {
    delivered: '#008000',  // Green
    cancelled: '#FF0000',  // Red
    pending: '#FFA500',    // Yellow
    return:'#800080',
    primary: '#42A5F5',    // Blue
    hoverPrimary: '#2196F3' // Darker Blue
  };

  // Check if salesChart and salesChart.total exist
  const totalDelivered = <%= salseChart && salseChart.total ? salseChart.total.deliveredProducts : 0 %>;
  const totalCancelled = <%= salseChart && salseChart.total ? salseChart.total.cancelledProducts : 0 %>;
  const totalPending = <%= salseChart && salseChart.total ? salseChart.total.pendingProducts : 0 %>;
  const totalReturned = <%= salseChart && salseChart.total ? salseChart.total.returnedProducts : 0 %>;

  // Doughnut Chart Data (dynamic data)
  const doughnutData = {
    labels: ['Delivered', 'Cancelled', 'Pending','Returned'],
    datasets: [{
      data: [totalDelivered, totalCancelled, totalPending,totalReturned],
      backgroundColor: [colors.delivered, colors.cancelled, colors.pending,colors.return],
      hoverBackgroundColor: [colors.delivered, colors.cancelled, colors.pending,colors.return],
      borderWidth: 3
    }]
  };

  // Doughnut Chart Options
  const doughnutOptions = {
    responsive: true,
    maintainAspectRatio: false,
    legend: {
      position: 'bottom',
      labels: {
        fontColor: '#4B4B4B',
        fontSize: 14,
        padding: 20
      }
    },
    tooltips: {
      backgroundColor: 'rgba(0, 0, 0, 0.7)',
      titleFontSize: 16,
      titleFontColor: '#FFFFFF',
      bodyFontColor: '#FFFFFF',
      bodyFontSize: 14,
      cornerRadius: 4,
      xPadding: 10,
      yPadding: 10
    }
  };

  // Initialize Doughnut Chart
  const ctxDoughnut = document.getElementById('salesReportDoughnut').getContext('2d');
  const salesReportDoughnut = new Chart(ctxDoughnut, {
    type: 'doughnut',
    data: doughnutData,
    options: doughnutOptions
  });

  // Bar Chart Data (dynamically update the sales data for weekly, monthly, and yearly)
  const weeklyData = [<%= salseChart && salseChart.weekly ? salseChart.weekly.deliveredProducts : 0 %>, <%= salseChart && salseChart.weekly ? salseChart.weekly.cancelledProducts : 0 %>, <%= salseChart && salseChart.weekly ? salseChart.weekly.pendingProducts : 0 %>, <%= salseChart && salseChart.yearly ? salseChart.yearly.returnedProducts : 0 %>];
  const monthlyData = [<%= salseChart && salseChart.monthly ? salseChart.monthly.deliveredProducts : 0 %>, <%= salseChart && salseChart.monthly ? salseChart.monthly.cancelledProducts : 0 %>, <%= salseChart && salseChart.monthly ? salseChart.monthly.pendingProducts : 0 %>, <%= salseChart && salseChart.yearly ? salseChart.yearly.returnedProducts : 0 %>];
  const yearlyData = [<%= salseChart && salseChart.yearly ? salseChart.yearly.deliveredProducts : 0 %>, <%= salseChart && salseChart.yearly ? salseChart.yearly.cancelledProducts : 0 %>, <%= salseChart && salseChart.yearly ? salseChart.yearly.pendingProducts : 0 %>, <%= salseChart && salseChart.yearly ? salseChart.yearly.returnedProducts : 0 %>];

  const barData = {
    labels: ['Delivered', 'Cancelled', 'Pending','Retuned'],
    datasets: [{
      label: 'Total Sales',
      data: [totalDelivered, totalCancelled, totalPending,totalReturned], // Using the total data
      backgroundColor: colors.primary,
      hoverBackgroundColor: colors.hoverPrimary,
      borderRadius: 10,
      barThickness: 50
    }]
  };

  // Bar Chart Options
  const barOptions = {
    responsive: true,
    maintainAspectRatio: false,
    scales: {
      yAxes: [{
        ticks: {
          beginAtZero: true,
          fontColor: '#4B4B4B',
          fontSize: 14,
          padding: 10
        },
        gridLines: {
          color: '#E0E0E0',
          lineWidth: 1
        }
      }],
      xAxes: [{
        ticks: {
          fontColor: '#4B4B4B',
          fontSize: 14,
          padding: 10
        },
        gridLines: {
          display: false
        }
      }]
    },
    legend: {
      display: false
    },
    tooltips: {
      backgroundColor: 'rgba(0, 0, 0, 0.7)',
      titleFontSize: 16,
      titleFontColor: '#FFFFFF',
      bodyFontColor: '#FFFFFF',
      bodyFontSize: 14,
      cornerRadius: 4,
      xPadding: 10,
      yPadding: 10
    }
  };

  // Initialize Bar Chart
  const ctxBar = document.getElementById('salesReportBar').getContext('2d');
  const salesReportBar = new Chart(ctxBar, {
    type: 'bar',
    data: barData,
    options: barOptions
  });

  // Update the Bar Chart Data dynamically on button click
  const updateBarChart = (data, period) => {
    salesReportBar.data.datasets[0].data = data;
    salesReportBar.update();
    // Update the heading based on the period
    document.getElementById('salesStatusHeading').innerText = `${period} Sales Overview`;
  };

  // Add Event Listeners to Buttons
  const buttonHandler = (btnId, data, period) => {
    document.getElementById(btnId).addEventListener('click', () => {
      updateBarChart(data, period);
    });
  };

  buttonHandler('weeklyBtn', weeklyData, 'Weekly');
  buttonHandler('monthlyBtn', monthlyData, 'Monthly');
  buttonHandler('yearlyBtn', yearlyData, 'Yearly');

  // Function to handle custom date range sales report
  const filterDataByDateRange = (startDate, endDate) => {
    // Placeholder for your data filtering logic (either fetch from server or filter locally)
    // You should replace this part with an actual API call to the backend to get filtered data
    fetch(`/admin/dashboard?startDate=${startDate}&endDate=${endDate}`)
      .then(response => response.json())
      .then(filteredData => {
        // Update the bar chart with filtered data
        const data = [
          filteredData.delivered,
          filteredData.cancelled,
          filteredData.pending,
        filteredData.reutrned
        ];

        // Update the chart with the filtered data
        salesReportBar.data.datasets[0].data = data;

        // Update the heading with the custom date range
        document.getElementById('salesStatusHeading').innerText = `Sales Report from ${startDate} to ${endDate}`;

        // Update the chart
        salesReportBar.update();
      })
      .catch(error => {
        console.error('Error fetching sales data:', error);
      });
  };

  // Add event listener for custom date range button
  document.getElementById('customDateBtn').addEventListener('click', () => {
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;

    if (!startDate || !endDate) {
      alert('Please select both start and end dates.');
      return;
    }

    // Filter data based on the selected date range
    filterDataByDateRange(startDate, endDate);
  });
</script>








          <!-- / Content -->

          
          

<!-- Footer -->
<footer class="content-footer footer bg-footer-theme">
  <div class="container-xxl">
    <div class="footer-container d-flex align-items-center justify-content-between py-4 flex-md-row flex-column">
      <div class="text-body mb-2 mb-md-0">
        © <script>
        document.write(new Date().getFullYear())

        </script>, made with <span class="text-danger"><i class="tf-icons ri-heart-fill"></i></span> by <a href="https://themeselection.com/" target="_blank" class="footer-link">ThemeSelection</a>
      </div>
      <div class="d-none d-lg-inline-block">
        
        <a href="https://themeselection.com/license/" class="footer-link me-4" target="_blank">License</a>
        <a href="https://themeselection.com/" target="_blank" class="footer-link me-4">More Themes</a>
        
        <a href="https://demos.themeselection.com/materio-bootstrap-html-admin-template/documentation/" target="_blank" class="footer-link me-4">Documentation</a>
        
        
        <a href="https://themeselection.com/support/" target="_blank" class="footer-link d-none d-sm-inline-block">Support</a>
        
      </div>
    </div>
  </div>
</footer>
<!-- / Footer -->

          
          <div class="content-backdrop fade"></div>
        </div>
        <!-- Content wrapper -->
      </div>
      <!-- / Layout page -->
    </div>

    
    
    <!-- Overlay -->
    <div class="layout-overlay layout-menu-toggle"></div>
    
    
    <!-- Drag Target Area To SlideIn Menu On Small Screens -->
    <div class="drag-target"></div>
    
  </div>
  <!-- / Layout wrapper -->


  

  

  <!-- Core JS -->
  <!-- build:js assets/vendor/js/core.js -->
  <script src="../../assets/vendor/libs/jquery/jquery.js"></script>
  <script src="../../assets/vendor/libs/popper/popper.js"></script>
  <script src="../../assets/vendor/js/bootstrap.js"></script>
  <script src="../../assets/vendor/libs/node-waves/node-waves.js"></script>
  <script src="../../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
  <script src="../../assets/vendor/libs/hammer/hammer.js"></script>
  <script src="../../assets/vendor/libs/i18n/i18n.js"></script>
  <script src="../../assets/vendor/libs/typeahead-js/typeahead.js"></script>
  <script src="../../assets/vendor/js/menu.js"></script>
  
  <!-- endbuild -->

  <!-- Vendors JS -->
  <script src="../../assets/vendor/libs/apex-charts/apexcharts.js"></script>

  <!-- Main JS -->
  <script src="../../assets/js/main.js"></script>
  

  <!-- Page JS -->
  <script src="../../assets/js/app-ecommerce-dashboard.js"></script>
  
</body>


<!-- Mirrored from demos.themeselection.com/materio-bootstrap-html-admin-template/html/vertical-menu-template/app-ecommerce-dashboard.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 25 Jun 2024 05:47:59 GMT -->
</html>

<!-- beautify ignore:end -->

